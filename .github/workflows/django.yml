name: Django CI and Delivery

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Creates and sets environment variable
      id: dot_env_creation
      run: |
        echo "DSN_SENTRY=${{ secrets.DSN_SENTRY }}" > .env
        echo "SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .env
        echo "DJANGO_DATABASE_NAME=${{ secrets.DJANGO_DATABASE_NAME }}" >> .env

    - name: Run linting
      run: |
        flake8
      if: ${{ steps.dot_env_creation.outcome }} == "success"
      
    - name: Run Tests
      run: |
        python manage.py test
      if: ${{ steps.dot_env_creation.outcome }} == "success"

    - name: Ensures test coverage is above 80%
      id: coverage_test
      run: |
        pytest --cov-fail-under=80
      if: ${{ steps.dot_env_creation.outcome }} == "success"

    - name: Export environment variables
      run: |
        echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> $GITHUB_ENV
        echo "DOCKER_PASSWORD=${{ secrets.DOCKER_PASSWORD }}" >> $GITHUB_ENV

    - name: Log in to Docker Hub
      id: dockerhub_login
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}
        ecr: auto
        logout: true
        if: ${{ steps.coverage_test.outcome }} == "success"
     
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker images
      id: packaging
      uses: docker/build-push-action@v5.0.0
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: sirmattheo/oc-lettings-site:${{ github.sha }},sirmattheo/oc-lettings-site:latest
      if: ${{ steps.dockerhub_login.outcome }} == "success"
    
    - name: Export environment variables for EC2
      run: |
        echo "EC2_HOST=${{ secrets.EC2_HOST }}" >> $GITHUB_ENV
        echo "EC2_USERNAME=${{ secrets.EC2_USERNAME }}" >> $GITHUB_ENV
        echo "EC2_SECRET_KEY=${{ secrets.EC2_SECRET_KEY }}" >> $GITHUB_ENV

    - name: Deploy Docker to AWS (EC2)
      id: deployment
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ env.EC2_HOST }}
        username: ${{ env.EC2_USERNAME }}
        key: ${{ env.EC2_SECRET_KEY }}
        script: |
          docker stop sirmattheo/oc-lettings-site || true
          docker rm sirmattheo/oc-lettings-site || true
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/oc-lettings-site:${{ github.sha }}
          docker run -d -p 8000:8000 --name sirmattheo ${{ secrets.DOCKERHUB_USERNAME }}/oc-lettings-site:${{ github.sha }}
      if: ${{ steps.packaging.outcome }} == "success"
